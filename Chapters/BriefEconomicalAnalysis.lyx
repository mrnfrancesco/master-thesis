#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass classicthesis
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begingroup
\end_layout

\begin_layout Plain Layout


\backslash
let
\backslash
clearpage
\backslash
relax
\end_layout

\begin_layout Plain Layout


\backslash
let
\backslash
cleardoublepage
\backslash
relax
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align right

\shape slanted
A medieval castle is only going to channel the bad guys,
\begin_inset Newline newline
\end_inset

not deter someone who really wants to get into your data.
\begin_inset Newline newline
\end_inset


\shape default

\begin_inset VSpace medskip
\end_inset

 — 
\series bold
Jon Rigby
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Chapter
Breve analisi economica
\begin_inset CommandInset label
LatexCommand label
name "ch:brief-economical-analysis"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand nocite
key "zero_days_thousands_of_nights"

\end_inset


\end_layout

\begin_layout Standard
Le vulnerabilità sono entità dinamiche: l'utilità di un errore può cambiare
 a seconda di dove si trova nel codice.
 Inoltre non tutti gli errori sono vulnerabilità e non tutte le vulnerabilità
 possono essere sfruttate.
 L'utilità di un errore nel codice può cambiare anche da un giorno a un
 altro: una vulnerabilità che inizialmente non è sfruttabile lo può diventare,
 o vice versa.
 Per permettere questo vengono sviluppate costantemente nuovi metodi di
 accesso e nuove tecniche.
 Allo stesso modo vengono sviluppate e introdotte mitigazioni per prevenire
 l'utilizzo delle vulnerabilità esistenti.
\end_layout

\begin_layout Section
Tempo necessario a trovare nuove vulnerabilità
\end_layout

\begin_layout Standard
Il tempo necessario a trovare una nuova vulnerabilità può variare in base
 a diversi fattori tra cui l'ambiente utilizzato, la quantità e l'età del
 codice esaminato, ecc.
 Aziende che si occupano di ricerca di vulnerabilità e sviluppo di exploit
 dichiarano di impiegare circa un mese di media per quest'attività.
\end_layout

\begin_layout Standard
La maggior parte del tempo viene impiegato per la configurazione dell'ambiente,
 ad esempio per assicurarsi che il 
\emph on
fuzzer
\emph default
 che si intende utilizzare sia adatto allo specifico applicativo da testare.
 Per chi utilizza l'analisi dinamica tramite 
\emph on
fuzzing
\emph default
, una volta che il 
\emph on
tool
\emph default
 è settato, il tempo stimato per trovare una possibile vulnerabilità è dell'ordi
ne delle ore.
 Questo probabilmente perché questo tipo di strumenti difficilmente scendono
 in profondità
\begin_inset Foot
status open

\begin_layout Plain Layout
In uno studio sull'efficacia del 
\emph on
fuzzing
\emph default
 come metodo per la ricerca di vulnerabilità è stato dimostrato che diversi
 
\emph on
fuzzer
\emph default
 applicati a un software volutamente vulnerabile hanno segnalato una media
 del solo 
\begin_inset Formula $2\%$
\end_inset

 dei bug totali.
\end_layout

\end_inset

 a meno di non essere costruiti appositamente per testare un applicativo
 specifico.
\end_layout

\begin_layout Standard
D'altro canto revisionare del codice a mano può richiedere molto più tempo
 (da diversi giorni fino ad alcuni mesi), spesso perché i ricercatori controllan
o a fondo ogni funzione invocata durante il flusso d'esecuzione del software
 in esame.
\end_layout

\begin_layout Standard
Il tempo per trovare una vulnerabilità, quindi, può dipendere da che tipo
 di prodotto e quale parte del suo codice vengono esaminati, se esistono
 
\emph on
tool
\emph default
 o tecniche per l'individuazione di vulnerabilità che possono essere utilizzate
 su prodotti differenti senza dover introdurre sostanziali modifiche, e
 quali tecniche di mitigazione esistono sul prodotto.
\end_layout

\begin_layout Standard
Le vulnerabilità più veloci da trovare si trovano solitamente in software
 nuovi, meno conosciuti e non eccessivamente grandi in quanto è possibile
 che un'analisi approfondita non sia ancora stata fatta da altri ricercatori.
\end_layout

\begin_layout Standard
Spesso quest'ultimi spendono da un minimo di una settimana a un massimo
 di un mese nel tentativo di trovare nuove vulnerabilità; se in questo tempo
 non viene trovato nulla di utile l'approccio utilizzato è quello di accantonare
 temporaneamente la ricerca su quel prodotto spostandosi su altro per tornare
 poi successivamente sulla ricerca precedente.
 Un approccio migliore è quello di passare il progetto a un collega che
 possa confermare o smentire l'assenza di vulnerabilità nel codice in analisi.
 Questo processo può essere ripetuto due o tre volte generalmente fino a
 un massimo di alcuni mesi prima che il prodotto venga messo da parte ed
 etichettato come 
\begin_inset Quotes eld
\end_inset

non vulnerabile
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Anche quando un cliente richiede un 
\emph on
exploit
\emph default
 per un prodotto specifico, se non vengono trovate vulnerabilità dopo alcuni
 mesi, la ricerca si ferma fino al rilascio di una nuova versione del prodotto
 che potrebbe aver introdotto delle vulnerabilità o del codice che permette
 di raggiungere vulnerabilità altrimenti irraggiungibili.
\end_layout

\begin_layout Section
Tempo necessario a sviluppare un exploit
\end_layout

\begin_layout Standard
Uno studio basato su 
\begin_inset Formula $159$
\end_inset

 campioni mostra che il tempo di sviluppo di un exploit è molto variabile,
 ma generalmente relativamente breve.
 Nei dati mostrati in Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:exploit-development-frequency-count"

\end_inset

 il 
\begin_inset Formula $71\%$
\end_inset

 degli exploit è stato sviluppato in al più un mese, il 
\begin_inset Formula $31,44\%$
\end_inset

 in al più una settimana, e solo per il 
\begin_inset Formula $10\%$
\end_inset

 sono stati necessari più di 
\begin_inset Formula $90$
\end_inset

 giorni.
 Possiamo quindi stabilire un valore mediano di circa 
\begin_inset Formula $22$
\end_inset

 giorni.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/exploit-development-frequency-count.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:exploit-development-frequency-count"

\end_inset

Diagramma delle frequenze del tempo di sviluppo di un exploit basato su
 
\begin_inset Formula $159$
\end_inset

 campioni
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per giustificare l'ampiezza del range di valori bisogna considerare che
 i tempi di sviluppo più brevi potrebbero essere dovuti al fatto che lo
 sviluppatore che li ha scritti fosse un esperto del prodotto vulnerabile
 o della tipologia di vulnerabilità trovata.
 Tempi di sviluppo più lunghi, invece, possono essere attribuiti alla necessità
 di mettere in sequenza più vulnerabilità o di dover adattare il codice
 per ogni versione diversa del software vulnerabile, ecc.
\end_layout

\begin_layout Section
Analisi dei costi: quanto costa sviluppare un exploit?
\end_layout

\begin_layout Standard
Basandosi esclusivamente sul costo di uno sviluppatore in termini salariali
 e sul tempo impiegato a trovare una vulnerabilità e a sviluppare il codice
 che la sfrutti, è possibile stimare in termini spannometrici il costo medio
 di un 
\emph on
exploit
\emph default
.
\end_layout

\begin_layout Standard
Definiamo con 
\begin_inset Formula $X$
\end_inset

 il salario medio annuo di specialista in sicurezza.
 Considerando i costi addizionali che per un lavoratore possono variare
 dal 
\begin_inset Formula $18$
\end_inset

 al 
\begin_inset Formula $40\%$
\end_inset

, questo si traduce in un costo medio per impiegato di 
\begin_inset Formula $1,29\cdot X$
\end_inset

.
 Considerando una media di 
\begin_inset Formula $253$
\end_inset

 giorni lavorativi all'anno, il costo per giorno è di 
\begin_inset Formula $\left(\frac{1,29}{253}\right)\cdot X$
\end_inset

.
\end_layout

\begin_layout Standard
Considerando un tempo medio di 
\begin_inset Formula $1$
\end_inset

 mese (
\begin_inset Formula $\sim21,45$
\end_inset

 giorni lavorativi) per la ricerca di una vulnerabilità e di 
\begin_inset Formula $22$
\end_inset

 giorni (
\begin_inset Formula $\sim15,73$
\end_inset

 giorni lavorativi) per lo sviluppo di un exploit, con un salario medio
 di 
\begin_inset Formula $\simeq49000\text{€}$
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Secondo i dati di 
\begin_inset CommandInset href
LatexCommand href
name "Salary.com"
target "https://swz.salary.com/SalaryWizard/Security-Specialist-Salary-Details-ITALY-TX.aspx"

\end_inset

 riferiti alla figura di 
\emph on
Security Specialist
\emph default
 in Italia
\end_layout

\end_inset

 (vedi Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:average-salary-for-security-specialist"

\end_inset

) lordi annui otteniamo un costo medio totale per exploit di:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\left(\frac{1,29}{253}\right)\cdot49000\right)\cdot\left(21,45+15,73\right)\simeq9289\text{€}
\]

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/average-salary-for-security-specialist.png
	display false
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:average-salary-for-security-specialist"

\end_inset

Salario medio di un 
\emph on
Security Specialist
\emph default
 in Italia
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nonostante il costo sia piuttosto basso, non vengono considerati gli ulteriori
 costi tangibili (acquistare il prodotto da analizzare, configurare l'infrastrut
tura, ecc) e intangibili e non viene presa in considerazione la possibilità
 che la ricerca fallisca nel tentativo di trovare una nuova vulnerabilità
 o nello sviluppo di un exploit funzionante.
\end_layout

\begin_layout Section
Prezzo di vendita e ricavo interno
\end_layout

\begin_layout Standard
Trovare e sfruttare vulnerabilità differenti richiede competenze e sforzi
 differenti.
 Alcuni credono che il costo di un 
\emph on
exploit
\emph default
 dovrebbe essere tanto maggiore quanto è stato difficile trovare e sfruttare
 la vulnerabilità.
 Altri credono che a determinare il costo debbano essere l'impatto e la
 gravità della vulnerabilità.
 Un altro fattore è la ricchezza nel mercato del prodotto affetto dalla
 vulnerabilità trovata.
\end_layout

\begin_layout Standard
Inoltre è facile che mercati differenti abbiano schemi di pagamento differenti.
 È stato stimato ad esempio che i prezzi nei 
\emph on
black market
\emph default
 (il mercato illegale) e 
\emph on
gray market
\emph default
 (il mercato dei governi) sono fino a dieci volte maggiori di quelli nel
 
\emph on
white market
\emph default
 (il mercato legale, ad esempio i 
\emph on
bug bounty program
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
È un accordo offerto da molti siti web e software house per cui ricercatori
 indipendenti possono ricevere dei compensi in denaro per segnalare bug,
 soprattutto se portano a vulnerabilità sfruttabili.
\end_layout

\begin_layout Plain Layout
Questi programmi permettono agli sviluppatori di risolvere bug prima che
 il grande pubblico possa accorgersi della loro esistenza, prevenendo così
 incidenti e abusi su larga scala.
\end_layout

\end_inset


\emph default
), soprattutto perché i primi due mirano ad avere 
\emph on
exploit
\emph default
 funzionanti di cui si acquista anche l'esclusività, mentre nell'ultimo
 caso spesso sono sufficienti solo i dettagli che descrivono la vulnerabilità,
 anche senza alcun codice funzionante.
\end_layout

\begin_layout Standard
Stabilire un prezzo per una vulnerabilità 
\emph on

\begin_inset Formula $0$
\end_inset

-day
\emph default
 è difficile, ma ci vengono in aiuto alcune risorse 
\begin_inset CommandInset citation
LatexCommand citep
key "bugcrowd_payout_model,zerodium_payout"

\end_inset

 che possono darci un'idea dei criteri da utilizzare.
\end_layout

\begin_layout Subsection
Maturità dell'azienda
\end_layout

\begin_layout Standard
La maturità dell'azienda in materia di sicurezza è un elemento fondamentale
 per determinare il modello di costo per le vulnerabilità.
 Un'organizzazione con un programma di sicurezza più maturo avrà dei processi
 interni di analisi e gestione della sicurezza, quindi sarà più difficile
 trovare delle vulnerabilità che pertanto dovranno essere pagate in modo
 adeguato.
\end_layout

\begin_layout Standard
In Tabella 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:company-security-maturity"

\end_inset

 sono presentati alcuni fattori che permettono di classificare la maturità
 di un'azienda in materia di sicurezza:
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/company-security-maturity.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:company-security-maturity"

\end_inset

Tabella che permette di identificare la maturità di un'azienda in termini
 di sicurezza
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Priorità di un bug
\end_layout

\begin_layout Standard
Una volta stabilita la maturità dell'azienda è necessario dare alle vulnerabilit
à una priorità per poterne stabilire un prezzo appropriato.
 Per ottenere un valore di priorità appropriato bisogna valutare la vulnerabilit
à dal punto di vista dell'impatto tecnico e di business.
 Mentre l'aspetto tecnico può essere ottenuto in maniera obiettiva sulla
 base di un questionario standard, l'impatto sull'azienda deve essere valutata
 dall'azienda stessa sulla base di alcuni parametri ambientali come la presenza
 o meno di macchine vulnerabili, la loro raggiungibilità, ecc.
\end_layout

\begin_layout Standard
È stato studiato che una scala di priorità che va da un minimo di 
\begin_inset Formula $1$
\end_inset

 (vulnerabilità critiche) a un massimo di 
\begin_inset Formula $5$
\end_inset

 (rischi accettabili) è funzionale per questo scopo.
 In Tabella 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:bug-priority"

\end_inset

 è riportato un esempio di matrice di priorità che può essere utilizzata
 come riferimento.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/bug-priority.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:bug-priority"

\end_inset

Tabella che permette di identificare la priorità di un bug
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modello di costo
\end_layout

\begin_layout Standard
Una volta calcolate la maturità dell'azienda e la priorità della vulnerabilità
 si hanno abbastanza informazioni per creare un modello di costo che sia
 utilizzabile come riferimento.
 Un esempio è mostrato in Tabella 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:bug-payout-model"

\end_inset

:
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/bug-payout-model.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:bug-payout-model"

\end_inset

Tabella che permette di identificare il possibile costo di un bug
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
È importante notare che ogni riferimento va inserito in un contesto in cui
 vengono prese in considerazione ulteriori informazioni che possono essere
 determinanti nello stabilire il prezzo finale anche in funzione degli obiettivi
 aziendali.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
In Figura 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:zerodium-payout"

\end_inset

 è mostrato un esempio di modello di costo dell'azienda Zerodium.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/zerodium-payout-for-desktop-server.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace 4em
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/mrnfrancesco/git/master-thesis/gfx/zerodium-payout-for-mobile.png
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:zerodium-payout"

\end_inset

Costi per vulnerabilità 
\begin_inset Formula $0$
\end_inset

-day secondo il modello di Zerodium
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
endgroup
\end_layout

\end_inset


\end_layout

\end_body
\end_document
